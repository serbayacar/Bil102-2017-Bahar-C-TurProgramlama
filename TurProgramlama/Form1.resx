<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAB1ZJREFUWEetVgtQVOcVthpTg0iMhtFEBEToGLOZ1oRYjRoNHUKt7eTRNphERxNN
        gqKEgIhEjcrDykMRCxRrkmrqK1FQQHm5CCyoEGFByMKKK8jKsqhxlPiYjIl+Od/dR3VYiMSemW92773n
        fN+55z//+W+/PtoAwSOCYYJRAi+Bj/WX17zP5/T7v9pAgauHh8dLoaGhSZmZmRq9Xt/e1dV1U+w2f3nN
        +3xOP/pb4x7I+CbDfX19A3Nycipu3Lhx+9q1a7hy5QouX76MS5cu2cFr3udz+tGfcYy38vTZHnZ2dh6f
        np6eef369dtXr15VhDo6OmA0GnHu3Dm0trbawWve53P60Z9xjCcP+Sy092eDpIwzamtrDXwjEppMJkWk
        paVFEWxra1NAUdt/3udz+tGfcYwnD/nIa6Hv3R6ms8FgMMvaorOz007O34IqPcI/r8Tf44sRsLYQ/p8U
        4OXVeXg9rhAhGRrkHW+8x5/x5CGfNYleKzGA5WLGDDKbzQoRUV5nwPy0SszbWofEgjaklZiRXtqBtKMm
        pKrbsaWoDf/IbkbgxgrMjj+Cshq9PZY85COvdTl67InhXDOWjZkzmOX8oliHv6ZUI/rweSSoL2Bdzjms
        2N2AzblN+LToNDIK9Fizpw4r9ugQffAsovY0SnWK8NmhGnuvkI+85KeORe5eG8iuZeNw7Wxl/G9xI/6W
        WoeoXDNW5V3EskxZhloTbv3wI+62O3fu4OvTF7B4WzVCd+qxZPs38F9jSYI85CMv+a27o9sWdeXWYfey
        gRhUccqAWck1WLzfjCUHLiA4sxMLd7Yir6bdKtvdSus7ELilGnMz6jH7nzV4YXkuyqqbFD7ykp861LPI
        WmwAhwf3L7Nk2Zjx/IxqBO4wYu7eC5iz24y3dpoQuL0NK79qQoG2HTH76hH71SkYL35nlQd++PE2Xo4p
        xZ+SajAz4ST8ojV4Lfqwwkde8lOHetS1yMv45ATjGnEfcysVnTyDqYn1+Mv2Tvz5P2bM+syEmduMCMho
        hV+KHtPl2YxNOkyLr8XKXVqrvGUppqxS4/frKjHxk2PwXVkG76AsHK5oUHjJTx3qUdciLzOcY5STjPua
        5YrcVYvJW1oxbasZU9NNeCHViEkprZi46SyeTWyGan0jxq1rgFdUFT4vNljlAf35KxgTUgjvCA3GhpVg
        TKgabkG5WJRyROElP3WoR12LvBwknOUcp7by+8VV4Jnk81BtNmH8RiPGJbRi7HoD3NedxpOrdRj5cT1c
        I2oQsOEEbknZaXz7N5I0GPrBETwWpMbQ94vw6MJ8OM/LwW8X7bYvA3WoR12LvJxmPFC4PraO9VpWAp8k
        E7wT2+G1oQ2ecS1wjzkDt7V6JYERUfUYG3kMpss3FXFacvY3GPxuHga/p8YjC4rw6/n5GDj3EAa8eRBO
        r/5b4SU/dahHXYr/SuDDU82WAMs0KlQS2NhLApG1SM77X+nLGjrg8u4hOAeVYPD7xd0S6D8rw7681KEe
        dZkArc8VcA2rhN7UZZUH/hhTApfFpRgSVOowgd4qQOvWA9Njy0Xc2GMCj4dW4NvvvrfKA6ODC+ASrHGc
        wOwDUH2wS+HtqQe67YKwL7TwkqbrKYGRkdVQLVdD9dEhqMLzMSy4BEOXlGPIou4J9H9jHxZuKrQvr6Nd
        4HAOuK+qxdiE85YE1rfAM/YMvGJPwzu2ET7RMgcStYjLMWCOHFAe0pCjIo7D9UMNHl10FE4LrQnMyUX/
        13f+7BxwOAlfSzmJMXEGJQHvDS1QJRngu7kZk1Oa4J+iRdfNW0r5uf0i9jZgQmwVnl57Ap7LNRgeLDvh
        nXw89NYBzIg8aC8/+R1NQprDs8D740pZirNQbWzBlHQD/LY2w+9fTQgTwbst+6QMKpkJk+Kr8GzscUmi
        BM4L8uDy5u77OgtoDk/DHepGuEdWYnxC8z0J+CeU4+p1SxOyAuE7qkS8UklgQsxxeIQXY8jbX2JbbrXC
        Qz7y9nYa0hx+D+xQ6+CzogJPxTXguWS9jOQmTEzQ4g/RhYjd+zXmJhdDtbIYE+KqMH7NMbiHqTFywX58
        2sfvAVqPX0QV8kX0SpI02rJyjFldA5+1dfBeLT0iiXkK2IRPhB7FsAXZCFiTD80v/CKi/ew3Yci2E5gc
        lY8n3svC0Hn7MeKdfXg+PBuL08qQ/4DfhDZTvoq1Wu1Zlo1rxwZiObmVbOQE97XtP+/zOf3ozzjG9+Wr
        mOcCM3QRuDs5OQWkpqYeZeOwe0nIfUxR29rawGve53P60Z9xaWlpRYMGDZoufI9buanRozFDNoiHgGs1
        SfCKdG18VlaWnoR8I04yjlMK2cBr3udz+om/TuKiJd5f8IyAnOTutQrMjg4ckW6C3wh+J5gmeNXNzS1i
        6dKl+8XqdTrdJRH8nkOFv3J9Ue6fCgkJ+XL06NEfiv9Mga+AHOQiJ7l7rcDdRseHBAxyFjwmGCHwFDwt
        eF4wVfCiYIrgOcE4AcX4pkMEjCXHfYv+EnsA8n79fgIofExYBT/AAwAAAABJRU5ErkJggg==
</value>
  </data>
</root>